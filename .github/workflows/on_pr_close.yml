name: 'on pr close'

on:
  pull_request:
    types: 
    - closed
    branches:
    - dev
    - main
    paths:
      - "backend/**"
      - "frontend/**"

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      this_version: ${{ steps.this_version.outputs.this_version }}
      next_version: ${{ steps.next_version.outputs.next_version }}

    steps:
      - 
        uses: actions/checkout@v3
      - 
        # Read the current version number from git ls-remote
        id: this_version
        shell: bash
        run: |
          echo "this_version=$(git ls-remote --tag origin | cut -d '/' -f 3 | sort -V | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | tail -1)" >> $GITHUB_OUTPUT
      - 
        # Increment the version
        id: next_version
        run: |
          major=$(echo "${{ steps.this_version.outputs.this_version }}" | awk -F'.' '{print $1}')
          minor=$(echo "${{ steps.this_version.outputs.this_version }}" | awk -F'.' '{print $2}')
          patch=$(echo "${{ steps.this_version.outputs.this_version }}" | awk -F'.' '{print $3}')

          if [[ "${{ github.event.pull_request.base.ref }}" = "main" ]]; then
            minor=$((minor+1))
            patch=0
          elif [[ "${{ github.event.pull_request.base.ref }}" = "dev" ]]; then
            patch=$((patch+1))
          fi
          
          next_version="${major}.${minor}.${patch}"
          echo "Updating version to $next_version"
          echo "next_version=$next_version" >> $GITHUB_OUTPUT

  # create tag for next version
  tag:
    if: github.event.pull_request.merged == true
    needs: 
    - prepare
    permissions:
      contents: write
      packages: write
    uses: ./.github/workflows/on_wfc_create_tag.yml
    with:
      tag: ${{ needs.prepare.outputs.next_version }}
    secrets: inherit
    
  # create image for next version
  docker_build:
    if: github.event.pull_request.merged == true
    needs: 
    - prepare
    permissions:
      contents: read
      packages: write      
    uses: ./.github/workflows/on_wfc_docker_build.yml
    with:
      image_tag: ${{ needs.prepare.outputs.next_version }}
    secrets: inherit